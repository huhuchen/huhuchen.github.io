<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python | the blog of huhuchen]]></title>
  <link href="http://huhuchen.github.io/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://huhuchen.github.io/"/>
  <updated>2014-11-16T19:08:22+08:00</updated>
  <id>http://huhuchen.github.io/</id>
  <author>
    <name><![CDATA[huhuchen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[python代码小记-效率及明确]]></title>
    <link href="http://huhuchen.github.io/blog/2013/07/04/pythondai-ma-xiao-ji-xiao-lu-ji-ming-que/"/>
    <updated>2013-07-04T19:46:00+08:00</updated>
    <id>http://huhuchen.github.io/blog/2013/07/04/pythondai-ma-xiao-ji-xiao-lu-ji-ming-que</id>
    <content type="html"><![CDATA[<p>今天写了一段代码，结果改了好几次，特此记录一下。</p>

<p>功能：传入任意字符，将其decode为unicode字符。</p>

<p>{% codeblock version1 lang:python %}
import chardet
def convert_charset_to_unicode(charset, default='utf-8'):</p>

<pre><code>charset_encoding = chardet.detect(charset).get('encoding') or default
return charset.decode(charset_encoding, 'ignore')
</code></pre>

<p>{% endcodeblock %}</p>

<p>问题：</p>

<ul>
<li> 效率低下，通常大多数需要decode字符都是utf-8，也就是说只有少数的情况下需要detect
 encoding。而现在的情况是每次decode都需要detect，而detect这个操作比较重，因此需要就效率进行一次优化。</li>
</ul>


<p>{% codeblock version2 lang:python %}
import chardet
def convert_charset_to_unicode(charset, default='utf-8'):</p>

<pre><code>try:
    return charset.decode(default)
except:
    charset_encoding = chardet.detect(charset).get('encoding') or default
    return charset.decode(charset_encoding, 'ignore')
</code></pre>

<p>{% endcodeblock %}</p>

<p>问题：</p>

<ul>
<li> 没有明确定义错误类型，当使用try..except..时，一般异常明确的时候需要指出其异常类型。</li>
</ul>


<p>{% codeblock version3 lang:python %}
import chardet
def convert_charset_to_unicode(charset, default='utf-8'):</p>

<pre><code>try:
    return charset.decode(default)
except UnicodeDecodeError:
    charset_encoding = chardet.detect(charset).get('encoding') or default
    return charset.decode(charset_encoding, 'ignore')
</code></pre>

<p>{% endcodeblock %}</p>

<p>小结：注重效率以及明确异常类型。</p>
]]></content>
  </entry>
  
</feed>
