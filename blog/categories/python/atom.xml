<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python | the blog of huhuchen]]></title>
  <link href="http://huhuchen.github.io/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://huhuchen.github.io/"/>
  <updated>2014-11-16T20:47:17+08:00</updated>
  <id>http://huhuchen.github.io/</id>
  <author>
    <name><![CDATA[huhuchen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[python代码小记-效率及明确]]></title>
    <link href="http://huhuchen.github.io/blog/2013/07/04/pythondai-ma-xiao-ji-xiao-lu-ji-ming-que/"/>
    <updated>2013-07-04T19:46:00+08:00</updated>
    <id>http://huhuchen.github.io/blog/2013/07/04/pythondai-ma-xiao-ji-xiao-lu-ji-ming-que</id>
    <content type="html"><![CDATA[<p>今天写了一段代码，结果改了好几次，特此记录一下。</p>

<p>功能：传入任意字符，将其decode为unicode字符。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>version1 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">chardet</span>
</span><span class='line'><span class="k">def</span> <span class="nf">convert_charset_to_unicode</span><span class="p">(</span><span class="n">charset</span><span class="p">,</span> <span class="n">default</span><span class="o">=&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">utf</span><span class="o">-</span><span class="mi">8</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">charset_encoding</span> <span class="o">=</span> <span class="n">chardet</span><span class="o">.</span><span class="n">detect</span><span class="p">(</span><span class="n">charset</span><span class="p">)</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;encoding&#39;</span><span class="p">)</span> <span class="ow">or</span> <span class="n">default</span>
</span><span class='line'><span class="k">return</span> <span class="n">charset</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="n">charset_encoding</span><span class="p">,</span> <span class="s">&#39;ignore&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>问题：</p>

<ul>
<li> 效率低下，通常大多数需要decode字符都是utf-8，也就是说只有少数的情况下需要detect
 encoding。而现在的情况是每次decode都需要detect，而detect这个操作比较重，因此需要就效率进行一次优化。</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>version2 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">chardet</span>
</span><span class='line'><span class="k">def</span> <span class="nf">convert_charset_to_unicode</span><span class="p">(</span><span class="n">charset</span><span class="p">,</span> <span class="n">default</span><span class="o">=&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">utf</span><span class="o">-</span><span class="mi">8</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">try</span><span class="p">:</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">charset</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="n">default</span><span class="p">)</span>
</span><span class='line'><span class="k">except</span><span class="p">:</span>
</span><span class='line'>    <span class="n">charset_encoding</span> <span class="o">=</span> <span class="n">chardet</span><span class="o">.</span><span class="n">detect</span><span class="p">(</span><span class="n">charset</span><span class="p">)</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;encoding&#39;</span><span class="p">)</span> <span class="ow">or</span> <span class="n">default</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">charset</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="n">charset_encoding</span><span class="p">,</span> <span class="s">&#39;ignore&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>问题：</p>

<ul>
<li> 没有明确定义错误类型，当使用try..except..时，一般异常明确的时候需要指出其异常类型。</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>version3 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">chardet</span>
</span><span class='line'><span class="k">def</span> <span class="nf">convert_charset_to_unicode</span><span class="p">(</span><span class="n">charset</span><span class="p">,</span> <span class="n">default</span><span class="o">=&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">utf</span><span class="o">-</span><span class="mi">8</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">try</span><span class="p">:</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">charset</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="n">default</span><span class="p">)</span>
</span><span class='line'><span class="k">except</span> <span class="ne">UnicodeDecodeError</span><span class="p">:</span>
</span><span class='line'>    <span class="n">charset_encoding</span> <span class="o">=</span> <span class="n">chardet</span><span class="o">.</span><span class="n">detect</span><span class="p">(</span><span class="n">charset</span><span class="p">)</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;encoding&#39;</span><span class="p">)</span> <span class="ow">or</span> <span class="n">default</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">charset</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="n">charset_encoding</span><span class="p">,</span> <span class="s">&#39;ignore&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>小结：注重效率以及明确异常类型。</p>
]]></content>
  </entry>
  
</feed>
